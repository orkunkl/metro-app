syntax = "proto3";

package blog;

import "github.com/iov-one/weave/migration/codec.proto";
import "github.com/iov-one/weave/x/cash/codec.proto";
import "github.com/iov-one/weave/x/multisig/codec.proto";
import "github.com/iov-one/weave/x/sigs/codec.proto";
import "github.com/iov-one/weave/x/validators/codec.proto";
import "gogoproto/gogo.proto";
import "x/metro/codec.proto";

// Tx contains the message
// When extending Tx, follow the rules:
// - Range 1-50 is reserved for middlewares,
// - Range 51-inf is reserved for different message types,
// - Keep the same numbers for the same message types in weave based applications to
//   sustain compatibility between blockchains. For example, FeeInfo field is used by
//   both and indexed at first position. Skip unused fields (leave index unused or
//   comment out for clarity).
// When there is a gap in message sequence numbers - that most likely means some
// old fields got deprecated. This is done to maintain binary compatibility.
message Tx {
  // Enables coin.GetFees()
  cash.FeeInfo fees = 1;
  //StdSignature represents the signature, the identity of the signer
  // (the Pubkey), and a sequence number to prevent replay attacks.
  repeated sigs.StdSignature signatures = 2;
  // ID of a multisig contract.
  repeated bytes multisig = 4;
  // sum defines over all allowed messages on this chain.
  oneof sum {
    cash.SendMsg cash_send_msg = 51;
    multisig.CreateMsg multisig_create_msg = 56;
    multisig.UpdateMsg multisig_update_msg = 57;
    validators.ApplyDiffMsg validators_apply_diff_msg = 58;
    ExecuteBatchMsg execute_batch_msg = 60;
    migration.UpgradeSchemaMsg migration_upgrade_schema_msg = 69;
    metro.RegisterPassengerMsg metro_register_passenger_msg = 70;
    metro.TrainArriveStationEventMsg metro_train_arrive_station_event_msg = 71;
  }
}

// ExecuteBatchMsg encapsulates multiple messages to support batch transaction
message ExecuteBatchMsg {
  message Union {
    // No recursive batches!
    oneof sum {
      cash.SendMsg cash_send_msg = 51;
      multisig.CreateMsg multisig_create_msg = 56;
      multisig.UpdateMsg multisig_update_msg = 57;
    }
  }
  repeated Union messages = 1 [(gogoproto.nullable) = false];
}
